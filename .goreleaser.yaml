# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 1

project_name: fabric

env:
  - CGO_ENABLED=0

before:
  hooks:
    - go mod tidy
    - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}}

builds:
  # CLI

  - id: fabric
    main: .
    binary: fabric
    flags: "-trimpath"
    ldflags:
      - -s -w
      - -X github.com/blackstork-io/fabric/cmd.version={{.Version}}
      - -X github.com/blackstork-io/fabric/cmd.builtBy=goreleaser

    targets:
      - linux_amd64_v1
      - linux_arm64 # implicitly v8
      - linux_386
      - darwin_amd64_v1
      - darwin_arm64
      - windows_amd64_v1
      - windows_arm64
      - windows_386


  # Plugins
  # TODO: generate this list with custom script or use Premium goreleaser to template it

  - id: plugin_elastic
    main: ./internal/elastic/cmd
    binary: "elastic@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_github
    main: ./internal/github/cmd
    binary: "github@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_graphql
    main: ./internal/graphql/cmd
    binary: "graphql@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_openai
    main: ./internal/openai/cmd
    binary: "openai@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_nist_nvd
    main: ./internal/nistnvd/cmd
    binary: "nist_nvd@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_opencti
    main: ./internal/opencti/cmd
    binary: "opencti@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_postgresql
    main: ./internal/postgresql/cmd
    binary: "postgresql@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_sqlite
    main: ./internal/sqlite/cmd
    binary: "sqlite@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_terraform
    main: ./internal/terraform/cmd
    binary: "terraform@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_hackerone
    main: ./internal/hackerone/cmd
    binary: "hackerone@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_virustotal
    main: ./internal/virustotal/cmd
    binary: "virustotal@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_splunk
    main: ./internal/splunk/cmd
    binary: "splunk@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_stixview
    main: ./internal/stixview/cmd
    binary: "stixview@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_snyk
    main: ./internal/snyk/cmd
    binary: "snyk@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

  - id: plugin_microsoft
    main: ./internal/microsoft/cmd
    binary: "microsoft@{{ .Version }}"
    flags: "-trimpath"
    hooks:
      post:
        - go run ./tools/pluginmeta --namespace blackstork --version {{.Version}} patch --plugin {{.Path}} --os {{.Os}} --arch {{.Arch}}
    goos:
      - linux
      - windows
      - darwin
    tags:
      - fabricplugin

archives:
  - id: fabric
    format: tar.gz
    builds:
      - fabric
    name_template: >-
      {{ .ProjectName }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip

  # Plugins
  # TODO: generate this list with custom script or use Premium goreleaser to template it

  - id: plugin_elastic
    format: tar.gz
    builds:
      - plugin_elastic
    name_template: >-
      plugin_elastic_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_github
    format: tar.gz
    builds:
      - plugin_github
    name_template: >-
      plugin_github_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_graphql
    format: tar.gz
    builds:
      - plugin_graphql
    name_template: >-
      plugin_graphql_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_openai
    format: tar.gz
    builds:
      - plugin_openai
    name_template: >-
      plugin_openai_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_opencti
    format: tar.gz
    builds:
      - plugin_opencti
    name_template: >-
      plugin_opencti_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_postgresql
    format: tar.gz
    builds:
      - plugin_postgresql
    name_template: >-
      plugin_postgresql_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_sqlite
    format: tar.gz
    builds:
      - plugin_sqlite
    name_template: >-
      plugin_sqlite_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_terraform
    format: tar.gz
    builds:
      - plugin_terraform
    name_template: >-
      plugin_terraform_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_hackerone
    format: tar.gz
    builds:
      - plugin_hackerone
    name_template: >-
      plugin_hackerone_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_virustotal
    format: tar.gz
    builds:
      - plugin_virustotal
    name_template: >-
      plugin_virustotal_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_splunk
    format: tar.gz
    builds:
      - plugin_splunk
    name_template: >-
      plugin_splunk_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_stixview
    format: tar.gz
    builds:
      - plugin_stixview
    name_template: >-
      plugin_stixview_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: plugin_nist_nvd
    format: tar.gz
    builds:
      - plugin_nist_nvd
    name_template: >-
      plugin_nist_nvd_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
  - id: plugin_snyk
    format: tar.gz
    builds:
      - plugin_snyk
    name_template: >-
      plugin_snyk_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
  - id: plugin_microsoft
    format: tar.gz
    builds:
      - plugin_microsoft
    name_template: >-
      plugin_microsoft_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

dockers:
  - use: buildx
    goos: linux
    goarch: amd64
    goamd64: v1
    ids:
      - fabric
    image_templates:
      - "{{ .Env.CONTAINER_REPO_NAME }}:latest-amd64v1"
    build_flag_templates:
      - "--platform=linux/amd64/v1"
  - use: buildx
    goos: linux
    goarch: arm64
    ids:
      - fabric
    image_templates:
      - "{{ .Env.CONTAINER_REPO_NAME }}:latest-arm64v8"
    build_flag_templates:
      - "--platform=linux/arm64/v8"
  - use: buildx
    goos: linux
    goarch: "386"
    ids:
      - fabric
    image_templates:
      - "{{ .Env.CONTAINER_REPO_NAME }}:latest-386"
    build_flag_templates:
      - "--platform=linux/386"

docker_manifests:
  - name_template: "{{ .Env.CONTAINER_REPO_NAME }}:{{ .Version }}"
    image_templates:
    - "{{ .Env.CONTAINER_REPO_NAME }}:latest-amd64v1"
    - "{{ .Env.CONTAINER_REPO_NAME }}:latest-arm64v8"
    - "{{ .Env.CONTAINER_REPO_NAME }}:latest-386"
  - name_template: "{{ .Env.CONTAINER_REPO_NAME }}:latest"
    image_templates:
    - "{{ .Env.CONTAINER_REPO_NAME }}:latest-amd64v1"
    - "{{ .Env.CONTAINER_REPO_NAME }}:latest-arm64v8"
    - "{{ .Env.CONTAINER_REPO_NAME }}:latest-386"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

brews:
  - name: fabric
    ids:
      - fabric
    description: "An open-source command-line tool for cybersecurity reporting automation and a configuration language for reusable templates"
    homepage: "https://blackstork.io/fabric/"
    license: Apache-2.0
    repository:
      owner: blackstork-io
      name: homebrew-tools
      token: "{{ .Env.TAP_GITHUB_TOKEN }}"

release:
  extra_files:
    - glob: ./.tmp/plugins.json
  prerelease: auto
