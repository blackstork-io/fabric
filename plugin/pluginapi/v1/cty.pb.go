// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: pluginapi/v1/cty.proto

package pluginapiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CtyCapsuleType int32

const (
	CtyCapsuleType_CAPSULE_UNSPECIFIED  CtyCapsuleType = 0
	CtyCapsuleType_CAPSULE_PLUGIN_DATA  CtyCapsuleType = 1
	CtyCapsuleType_CAPSULE_DELAYED_EVAL CtyCapsuleType = 2
)

// Enum value maps for CtyCapsuleType.
var (
	CtyCapsuleType_name = map[int32]string{
		0: "CAPSULE_UNSPECIFIED",
		1: "CAPSULE_PLUGIN_DATA",
		2: "CAPSULE_DELAYED_EVAL",
	}
	CtyCapsuleType_value = map[string]int32{
		"CAPSULE_UNSPECIFIED":  0,
		"CAPSULE_PLUGIN_DATA":  1,
		"CAPSULE_DELAYED_EVAL": 2,
	}
)

func (x CtyCapsuleType) Enum() *CtyCapsuleType {
	p := new(CtyCapsuleType)
	*p = x
	return p
}

func (x CtyCapsuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CtyCapsuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_pluginapi_v1_cty_proto_enumTypes[0].Descriptor()
}

func (CtyCapsuleType) Type() protoreflect.EnumType {
	return &file_pluginapi_v1_cty_proto_enumTypes[0]
}

func (x CtyCapsuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CtyCapsuleType.Descriptor instead.
func (CtyCapsuleType) EnumDescriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{0}
}

type CtyPrimitiveType int32

const (
	CtyPrimitiveType_KIND_UNSPECIFIED CtyPrimitiveType = 0
	CtyPrimitiveType_KIND_STRING      CtyPrimitiveType = 1
	CtyPrimitiveType_KIND_NUMBER      CtyPrimitiveType = 2
	CtyPrimitiveType_KIND_BOOL        CtyPrimitiveType = 3
)

// Enum value maps for CtyPrimitiveType.
var (
	CtyPrimitiveType_name = map[int32]string{
		0: "KIND_UNSPECIFIED",
		1: "KIND_STRING",
		2: "KIND_NUMBER",
		3: "KIND_BOOL",
	}
	CtyPrimitiveType_value = map[string]int32{
		"KIND_UNSPECIFIED": 0,
		"KIND_STRING":      1,
		"KIND_NUMBER":      2,
		"KIND_BOOL":        3,
	}
)

func (x CtyPrimitiveType) Enum() *CtyPrimitiveType {
	p := new(CtyPrimitiveType)
	*p = x
	return p
}

func (x CtyPrimitiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CtyPrimitiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_pluginapi_v1_cty_proto_enumTypes[1].Descriptor()
}

func (CtyPrimitiveType) Type() protoreflect.EnumType {
	return &file_pluginapi_v1_cty_proto_enumTypes[1]
}

func (x CtyPrimitiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CtyPrimitiveType.Descriptor instead.
func (CtyPrimitiveType) EnumDescriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{1}
}

type CtyType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*CtyType_Primitive
	//	*CtyType_Object
	//	*CtyType_Map
	//	*CtyType_List
	//	*CtyType_Set
	//	*CtyType_Tuple
	//	*CtyType_DynamicPseudo
	//	*CtyType_Encapsulated
	Data isCtyType_Data `protobuf_oneof:"data"`
}

func (x *CtyType) Reset() {
	*x = CtyType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginapi_v1_cty_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtyType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtyType) ProtoMessage() {}

func (x *CtyType) ProtoReflect() protoreflect.Message {
	mi := &file_pluginapi_v1_cty_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtyType.ProtoReflect.Descriptor instead.
func (*CtyType) Descriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{0}
}

func (m *CtyType) GetData() isCtyType_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CtyType) GetPrimitive() CtyPrimitiveType {
	if x, ok := x.GetData().(*CtyType_Primitive); ok {
		return x.Primitive
	}
	return CtyPrimitiveType_KIND_UNSPECIFIED
}

func (x *CtyType) GetObject() *CtyObjectType {
	if x, ok := x.GetData().(*CtyType_Object); ok {
		return x.Object
	}
	return nil
}

func (x *CtyType) GetMap() *CtyType {
	if x, ok := x.GetData().(*CtyType_Map); ok {
		return x.Map
	}
	return nil
}

func (x *CtyType) GetList() *CtyType {
	if x, ok := x.GetData().(*CtyType_List); ok {
		return x.List
	}
	return nil
}

func (x *CtyType) GetSet() *CtyType {
	if x, ok := x.GetData().(*CtyType_Set); ok {
		return x.Set
	}
	return nil
}

func (x *CtyType) GetTuple() *CtyTupleType {
	if x, ok := x.GetData().(*CtyType_Tuple); ok {
		return x.Tuple
	}
	return nil
}

func (x *CtyType) GetDynamicPseudo() *CtyDynamicPseudoType {
	if x, ok := x.GetData().(*CtyType_DynamicPseudo); ok {
		return x.DynamicPseudo
	}
	return nil
}

func (x *CtyType) GetEncapsulated() CtyCapsuleType {
	if x, ok := x.GetData().(*CtyType_Encapsulated); ok {
		return x.Encapsulated
	}
	return CtyCapsuleType_CAPSULE_UNSPECIFIED
}

type isCtyType_Data interface {
	isCtyType_Data()
}

type CtyType_Primitive struct {
	Primitive CtyPrimitiveType `protobuf:"varint,1,opt,name=primitive,proto3,enum=pluginapi.v1.CtyPrimitiveType,oneof"`
}

type CtyType_Object struct {
	Object *CtyObjectType `protobuf:"bytes,2,opt,name=object,proto3,oneof"`
}

type CtyType_Map struct {
	Map *CtyType `protobuf:"bytes,3,opt,name=map,proto3,oneof"`
}

type CtyType_List struct {
	List *CtyType `protobuf:"bytes,4,opt,name=list,proto3,oneof"`
}

type CtyType_Set struct {
	Set *CtyType `protobuf:"bytes,5,opt,name=set,proto3,oneof"`
}

type CtyType_Tuple struct {
	Tuple *CtyTupleType `protobuf:"bytes,6,opt,name=tuple,proto3,oneof"`
}

type CtyType_DynamicPseudo struct {
	DynamicPseudo *CtyDynamicPseudoType `protobuf:"bytes,7,opt,name=dynamic_pseudo,json=dynamicPseudo,proto3,oneof"`
}

type CtyType_Encapsulated struct {
	Encapsulated CtyCapsuleType `protobuf:"varint,8,opt,name=encapsulated,proto3,enum=pluginapi.v1.CtyCapsuleType,oneof"`
}

func (*CtyType_Primitive) isCtyType_Data() {}

func (*CtyType_Object) isCtyType_Data() {}

func (*CtyType_Map) isCtyType_Data() {}

func (*CtyType_List) isCtyType_Data() {}

func (*CtyType_Set) isCtyType_Data() {}

func (*CtyType_Tuple) isCtyType_Data() {}

func (*CtyType_DynamicPseudo) isCtyType_Data() {}

func (*CtyType_Encapsulated) isCtyType_Data() {}

type CtyObjectType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attrs map[string]*CtyType `protobuf:"bytes,1,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CtyObjectType) Reset() {
	*x = CtyObjectType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginapi_v1_cty_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtyObjectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtyObjectType) ProtoMessage() {}

func (x *CtyObjectType) ProtoReflect() protoreflect.Message {
	mi := &file_pluginapi_v1_cty_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtyObjectType.ProtoReflect.Descriptor instead.
func (*CtyObjectType) Descriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{1}
}

func (x *CtyObjectType) GetAttrs() map[string]*CtyType {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type CtyTupleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*CtyType `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *CtyTupleType) Reset() {
	*x = CtyTupleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginapi_v1_cty_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtyTupleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtyTupleType) ProtoMessage() {}

func (x *CtyTupleType) ProtoReflect() protoreflect.Message {
	mi := &file_pluginapi_v1_cty_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtyTupleType.ProtoReflect.Descriptor instead.
func (*CtyTupleType) Descriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{2}
}

func (x *CtyTupleType) GetElements() []*CtyType {
	if x != nil {
		return x.Elements
	}
	return nil
}

type CtyDynamicPseudoType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtyDynamicPseudoType) Reset() {
	*x = CtyDynamicPseudoType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginapi_v1_cty_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtyDynamicPseudoType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtyDynamicPseudoType) ProtoMessage() {}

func (x *CtyDynamicPseudoType) ProtoReflect() protoreflect.Message {
	mi := &file_pluginapi_v1_cty_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtyDynamicPseudoType.ProtoReflect.Descriptor instead.
func (*CtyDynamicPseudoType) Descriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{3}
}

type CtyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *CtyType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are assignable to Data:
	//
	//	*CtyValue_Primitive
	//	*CtyValue_MapLike
	//	*CtyValue_ListLike
	//	*CtyValue_PluginData
	Data isCtyValue_Data `protobuf_oneof:"data"`
}

func (x *CtyValue) Reset() {
	*x = CtyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginapi_v1_cty_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtyValue) ProtoMessage() {}

func (x *CtyValue) ProtoReflect() protoreflect.Message {
	mi := &file_pluginapi_v1_cty_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtyValue.ProtoReflect.Descriptor instead.
func (*CtyValue) Descriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{4}
}

func (x *CtyValue) GetType() *CtyType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (m *CtyValue) GetData() isCtyValue_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CtyValue) GetPrimitive() *CtyPrimitiveValue {
	if x, ok := x.GetData().(*CtyValue_Primitive); ok {
		return x.Primitive
	}
	return nil
}

func (x *CtyValue) GetMapLike() *CtyMapLike {
	if x, ok := x.GetData().(*CtyValue_MapLike); ok {
		return x.MapLike
	}
	return nil
}

func (x *CtyValue) GetListLike() *CtyListLike {
	if x, ok := x.GetData().(*CtyValue_ListLike); ok {
		return x.ListLike
	}
	return nil
}

func (x *CtyValue) GetPluginData() *Data {
	if x, ok := x.GetData().(*CtyValue_PluginData); ok {
		return x.PluginData
	}
	return nil
}

type isCtyValue_Data interface {
	isCtyValue_Data()
}

type CtyValue_Primitive struct {
	Primitive *CtyPrimitiveValue `protobuf:"bytes,2,opt,name=primitive,proto3,oneof"`
}

type CtyValue_MapLike struct {
	MapLike *CtyMapLike `protobuf:"bytes,8,opt,name=mapLike,proto3,oneof"`
}

type CtyValue_ListLike struct {
	ListLike *CtyListLike `protobuf:"bytes,9,opt,name=listLike,proto3,oneof"`
}

type CtyValue_PluginData struct {
	PluginData *Data `protobuf:"bytes,10,opt,name=pluginData,proto3,oneof"`
}

func (*CtyValue_Primitive) isCtyValue_Data() {}

func (*CtyValue_MapLike) isCtyValue_Data() {}

func (*CtyValue_ListLike) isCtyValue_Data() {}

func (*CtyValue_PluginData) isCtyValue_Data() {}

type CtyPrimitiveValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*CtyPrimitiveValue_Str
	//	*CtyPrimitiveValue_Num
	//	*CtyPrimitiveValue_Bln
	Data isCtyPrimitiveValue_Data `protobuf_oneof:"data"`
}

func (x *CtyPrimitiveValue) Reset() {
	*x = CtyPrimitiveValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginapi_v1_cty_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtyPrimitiveValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtyPrimitiveValue) ProtoMessage() {}

func (x *CtyPrimitiveValue) ProtoReflect() protoreflect.Message {
	mi := &file_pluginapi_v1_cty_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtyPrimitiveValue.ProtoReflect.Descriptor instead.
func (*CtyPrimitiveValue) Descriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{5}
}

func (m *CtyPrimitiveValue) GetData() isCtyPrimitiveValue_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CtyPrimitiveValue) GetStr() string {
	if x, ok := x.GetData().(*CtyPrimitiveValue_Str); ok {
		return x.Str
	}
	return ""
}

func (x *CtyPrimitiveValue) GetNum() float64 {
	if x, ok := x.GetData().(*CtyPrimitiveValue_Num); ok {
		return x.Num
	}
	return 0
}

func (x *CtyPrimitiveValue) GetBln() bool {
	if x, ok := x.GetData().(*CtyPrimitiveValue_Bln); ok {
		return x.Bln
	}
	return false
}

type isCtyPrimitiveValue_Data interface {
	isCtyPrimitiveValue_Data()
}

type CtyPrimitiveValue_Str struct {
	Str string `protobuf:"bytes,1,opt,name=str,proto3,oneof"`
}

type CtyPrimitiveValue_Num struct {
	Num float64 `protobuf:"fixed64,2,opt,name=num,proto3,oneof"`
}

type CtyPrimitiveValue_Bln struct {
	Bln bool `protobuf:"varint,3,opt,name=bln,proto3,oneof"`
}

func (*CtyPrimitiveValue_Str) isCtyPrimitiveValue_Data() {}

func (*CtyPrimitiveValue_Num) isCtyPrimitiveValue_Data() {}

func (*CtyPrimitiveValue_Bln) isCtyPrimitiveValue_Data() {}

type CtyListLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*CtyValue `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *CtyListLike) Reset() {
	*x = CtyListLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginapi_v1_cty_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtyListLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtyListLike) ProtoMessage() {}

func (x *CtyListLike) ProtoReflect() protoreflect.Message {
	mi := &file_pluginapi_v1_cty_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtyListLike.ProtoReflect.Descriptor instead.
func (*CtyListLike) Descriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{6}
}

func (x *CtyListLike) GetElements() []*CtyValue {
	if x != nil {
		return x.Elements
	}
	return nil
}

type CtyMapLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements map[string]*CtyValue `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CtyMapLike) Reset() {
	*x = CtyMapLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginapi_v1_cty_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtyMapLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtyMapLike) ProtoMessage() {}

func (x *CtyMapLike) ProtoReflect() protoreflect.Message {
	mi := &file_pluginapi_v1_cty_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtyMapLike.ProtoReflect.Descriptor instead.
func (*CtyMapLike) Descriptor() ([]byte, []int) {
	return file_pluginapi_v1_cty_proto_rawDescGZIP(), []int{7}
}

func (x *CtyMapLike) GetElements() map[string]*CtyValue {
	if x != nil {
		return x.Elements
	}
	return nil
}

var File_pluginapi_v1_cty_proto protoreflect.FileDescriptor

var file_pluginapi_v1_cty_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd0, 0x03, 0x0a, 0x07, 0x43, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x70,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74,
	0x79, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x2b, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x73, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x74, 0x79, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x73, 0x65, 0x75, 0x64,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x50, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x12, 0x42, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x73,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x43,
	0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e,
	0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x43, 0x74, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x1a, 0x4f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x41, 0x0a, 0x0c, 0x43, 0x74, 0x79, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x74, 0x79, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x50, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa3,
	0x02, 0x0a, 0x08, 0x43, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x4c, 0x69,
	0x6b, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x4c, 0x69,
	0x6b, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x37, 0x0a,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x69,
	0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x11, 0x43, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x73, 0x74, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x12, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x75,
	0x6d, 0x12, 0x12, 0x0a, 0x03, 0x62, 0x6c, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x03, 0x62, 0x6c, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a,
	0x0b, 0x43, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x32, 0x0a, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x43, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x12,
	0x42, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x2e, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x53, 0x0a, 0x0d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x5c, 0x0a, 0x0e, 0x43, 0x74, 0x79, 0x43,
	0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x41,
	0x50, 0x53, 0x55, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x41, 0x50, 0x53, 0x55, 0x4c, 0x45, 0x5f, 0x50,
	0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x43, 0x41, 0x50, 0x53, 0x55, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x45, 0x44, 0x5f,
	0x45, 0x56, 0x41, 0x4c, 0x10, 0x02, 0x2a, 0x59, 0x0a, 0x10, 0x43, 0x74, 0x79, 0x50, 0x72, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x49,
	0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x10,
	0x03, 0x42, 0xae, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x43, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x6b, 0x2d, 0x69, 0x6f, 0x2f, 0x66, 0x61, 0x62,
	0x72, 0x69, 0x63, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x61, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x61, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pluginapi_v1_cty_proto_rawDescOnce sync.Once
	file_pluginapi_v1_cty_proto_rawDescData = file_pluginapi_v1_cty_proto_rawDesc
)

func file_pluginapi_v1_cty_proto_rawDescGZIP() []byte {
	file_pluginapi_v1_cty_proto_rawDescOnce.Do(func() {
		file_pluginapi_v1_cty_proto_rawDescData = protoimpl.X.CompressGZIP(file_pluginapi_v1_cty_proto_rawDescData)
	})
	return file_pluginapi_v1_cty_proto_rawDescData
}

var file_pluginapi_v1_cty_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pluginapi_v1_cty_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pluginapi_v1_cty_proto_goTypes = []interface{}{
	(CtyCapsuleType)(0),          // 0: pluginapi.v1.CtyCapsuleType
	(CtyPrimitiveType)(0),        // 1: pluginapi.v1.CtyPrimitiveType
	(*CtyType)(nil),              // 2: pluginapi.v1.CtyType
	(*CtyObjectType)(nil),        // 3: pluginapi.v1.CtyObjectType
	(*CtyTupleType)(nil),         // 4: pluginapi.v1.CtyTupleType
	(*CtyDynamicPseudoType)(nil), // 5: pluginapi.v1.CtyDynamicPseudoType
	(*CtyValue)(nil),             // 6: pluginapi.v1.CtyValue
	(*CtyPrimitiveValue)(nil),    // 7: pluginapi.v1.CtyPrimitiveValue
	(*CtyListLike)(nil),          // 8: pluginapi.v1.CtyListLike
	(*CtyMapLike)(nil),           // 9: pluginapi.v1.CtyMapLike
	nil,                          // 10: pluginapi.v1.CtyObjectType.AttrsEntry
	nil,                          // 11: pluginapi.v1.CtyMapLike.ElementsEntry
	(*Data)(nil),                 // 12: pluginapi.v1.Data
}
var file_pluginapi_v1_cty_proto_depIdxs = []int32{
	1,  // 0: pluginapi.v1.CtyType.primitive:type_name -> pluginapi.v1.CtyPrimitiveType
	3,  // 1: pluginapi.v1.CtyType.object:type_name -> pluginapi.v1.CtyObjectType
	2,  // 2: pluginapi.v1.CtyType.map:type_name -> pluginapi.v1.CtyType
	2,  // 3: pluginapi.v1.CtyType.list:type_name -> pluginapi.v1.CtyType
	2,  // 4: pluginapi.v1.CtyType.set:type_name -> pluginapi.v1.CtyType
	4,  // 5: pluginapi.v1.CtyType.tuple:type_name -> pluginapi.v1.CtyTupleType
	5,  // 6: pluginapi.v1.CtyType.dynamic_pseudo:type_name -> pluginapi.v1.CtyDynamicPseudoType
	0,  // 7: pluginapi.v1.CtyType.encapsulated:type_name -> pluginapi.v1.CtyCapsuleType
	10, // 8: pluginapi.v1.CtyObjectType.attrs:type_name -> pluginapi.v1.CtyObjectType.AttrsEntry
	2,  // 9: pluginapi.v1.CtyTupleType.elements:type_name -> pluginapi.v1.CtyType
	2,  // 10: pluginapi.v1.CtyValue.type:type_name -> pluginapi.v1.CtyType
	7,  // 11: pluginapi.v1.CtyValue.primitive:type_name -> pluginapi.v1.CtyPrimitiveValue
	9,  // 12: pluginapi.v1.CtyValue.mapLike:type_name -> pluginapi.v1.CtyMapLike
	8,  // 13: pluginapi.v1.CtyValue.listLike:type_name -> pluginapi.v1.CtyListLike
	12, // 14: pluginapi.v1.CtyValue.pluginData:type_name -> pluginapi.v1.Data
	6,  // 15: pluginapi.v1.CtyListLike.elements:type_name -> pluginapi.v1.CtyValue
	11, // 16: pluginapi.v1.CtyMapLike.elements:type_name -> pluginapi.v1.CtyMapLike.ElementsEntry
	2,  // 17: pluginapi.v1.CtyObjectType.AttrsEntry.value:type_name -> pluginapi.v1.CtyType
	6,  // 18: pluginapi.v1.CtyMapLike.ElementsEntry.value:type_name -> pluginapi.v1.CtyValue
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_pluginapi_v1_cty_proto_init() }
func file_pluginapi_v1_cty_proto_init() {
	if File_pluginapi_v1_cty_proto != nil {
		return
	}
	file_pluginapi_v1_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pluginapi_v1_cty_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtyType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginapi_v1_cty_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtyObjectType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginapi_v1_cty_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtyTupleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginapi_v1_cty_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtyDynamicPseudoType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginapi_v1_cty_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginapi_v1_cty_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtyPrimitiveValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginapi_v1_cty_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtyListLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginapi_v1_cty_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtyMapLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pluginapi_v1_cty_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CtyType_Primitive)(nil),
		(*CtyType_Object)(nil),
		(*CtyType_Map)(nil),
		(*CtyType_List)(nil),
		(*CtyType_Set)(nil),
		(*CtyType_Tuple)(nil),
		(*CtyType_DynamicPseudo)(nil),
		(*CtyType_Encapsulated)(nil),
	}
	file_pluginapi_v1_cty_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*CtyValue_Primitive)(nil),
		(*CtyValue_MapLike)(nil),
		(*CtyValue_ListLike)(nil),
		(*CtyValue_PluginData)(nil),
	}
	file_pluginapi_v1_cty_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*CtyPrimitiveValue_Str)(nil),
		(*CtyPrimitiveValue_Num)(nil),
		(*CtyPrimitiveValue_Bln)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pluginapi_v1_cty_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pluginapi_v1_cty_proto_goTypes,
		DependencyIndexes: file_pluginapi_v1_cty_proto_depIdxs,
		EnumInfos:         file_pluginapi_v1_cty_proto_enumTypes,
		MessageInfos:      file_pluginapi_v1_cty_proto_msgTypes,
	}.Build()
	File_pluginapi_v1_cty_proto = out.File
	file_pluginapi_v1_cty_proto_rawDesc = nil
	file_pluginapi_v1_cty_proto_goTypes = nil
	file_pluginapi_v1_cty_proto_depIdxs = nil
}
