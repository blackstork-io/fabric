syntax = "proto3";

package pluginapi.v1;

import "pluginapi/v1/data.proto";

message Cty {
    message Primitive {
        oneof data {
            string str = 1;
            // empty value is used for marking the type
            bytes  num = 2;
            bool   bln = 3;
        }
    }
    message Object{
        message Attr {
            Cty  data     = 1;
            bool optional = 2;
        }
        map<string, Attr> data = 1;
    }

    message Mapping{
        map<string, Cty> data = 1;
        // Original map is empty, element was added to preserve the type
        bool onlyType = 2;
    }

    message Sequence{
        repeated Cty data = 1;
        // Original sequence is empty, element added to preserve the type
        // Not true for empty tuples, since they are valid values
        bool onlyType = 2;
    }

    message Capsule {
        oneof data {
            Data pluginData = 1;
        }
    }
    message Dynamic {}
    // Cty with nil data is decoded as cty.NilVal
    oneof data {
        Primitive primitive =  1;
        Object    object    =  2;
        Mapping   map       =  3;
        Sequence  list      =  4;
        Sequence  set       =  5;
        Sequence  tuple     =  6;
        // Specifies type of null value
        CtyType   null      =  7;
        Capsule   caps      =  8;
        // Specifies type of the unknown value
        CtyType   unknown   =  9;
        // DynamicPseudoType
        Dynamic   dyn       = 10;
    }
}

// Forces decoding of the inner Cty as a type
message CtyType {
    Cty type = 1;
}

// Forces decoding of the inner Cty as a value
message CtyValue {
    Cty value = 1;
}
