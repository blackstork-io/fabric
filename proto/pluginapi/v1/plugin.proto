syntax = "proto3";

package pluginapi.v1;

import "pluginapi/v1/content.proto";
import "pluginapi/v1/cty.proto";
import "pluginapi/v1/data.proto";
import "pluginapi/v1/hcl.proto";
import "pluginapi/v1/schema.proto";
import "pluginapi/v1/dataspec.proto";


service PluginService {
    rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse) {}
    rpc RetrieveData(RetrieveDataRequest) returns (RetrieveDataResponse) {}
    rpc ProvideContent(ProvideContentRequest) returns (ProvideContentResponse) {}
    rpc Publish(PublishRequest) returns (PublishResponse) {}
}

message GetSchemaRequest {}

message GetSchemaResponse {
    Schema schema = 1;
}

message RetrieveDataRequest {
    string  source = 1;
    Block   args   = 2;
    Block   config = 3;
}

message RetrieveDataResponse {
    Data                data        = 1;
    repeated Diagnostic diagnostics = 2;
}

message ProvideContentRequest {
    string   provider     = 1;
    Block    args         = 2;
    Block    config       = 3;
    MapData  data_context = 4;
    uint32   content_id   = 5;
}

message ProvideContentResponse {
    ContentResult       result      = 1;
    repeated Diagnostic diagnostics = 2;
}


message PublishRequest {
    string         publisher     = 1;
    Block          args          = 2;
    Block          config        = 3;
    MapData        data_context  = 4;
    OutputFormat   format        = 5;
    string         document_name = 6;
}

message PublishResponse {
    repeated Diagnostic diagnostics = 1;
}